How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It showed me the differences between the code and helped me identify which character was missing.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It allows you to roll-back changes to a file and/or compare the previous with the current.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro's: Choose when to save your file
	Pro's: Choose the features that are commited
	Pro's: Choose the editor to want to use to make changes
	Con's: File is not automatically saved
	Con's: File must be edited through Google docs.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Google docs is not considered a code version control. It version controls individual files that are not connected. GIT allows for all files that are connected to be controlled at once.

How can you use the commands git log and git diff to view the history of files?

    shows the ID that was commited for each change and allows you to compare each change.

How might using version control make you more confident to make changes that
could break something?

    You can easily roll-back the changes.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here

